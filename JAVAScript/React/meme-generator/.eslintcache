[{"C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\index.js":"1","C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\reportWebVitals.js":"2","C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\App.js":"3","C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\components\\Header.js":"4","C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\components\\MemeGenerator.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":278,"mtime":1609430522824,"results":"9","hashOfConfig":"7"},{"size":333,"mtime":1609432179271,"results":"10","hashOfConfig":"7"},{"size":2368,"mtime":1609442860632,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ojpqti",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\index.js",[],["25","26"],"C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\reportWebVitals.js",[],"C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\App.js",["27"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport MemeGenerator from './components/MemeGenerator';\n\nfunction App() {\n  return (\n    <div>\n      Hello\n      <Header/>\n      <MemeGenerator/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\components\\Header.js",[],"C:\\Users\\harsh\\Desktop\\sql and html\\JAVAScript\\React\\meme-generator\\src\\components\\MemeGenerator.js",["28"],"import React from 'react';\r\nimport logo from '../logo.svg'\r\nclass MemeGenerator extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            topText:\"\",\r\n            bottomText:\"\",\r\n            randomImg:\"https://i.imgflip.com/4s5umt.jpg\",\r\n            allMemeImgs:[]\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n        this.handleSubmit=this.handleSubmit.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response =>{\r\n            const {memes}=response.data\r\n            console.log(memes[0]);\r\n            this.setState({allMemeImgs:memes})\r\n        })\r\n    }\r\n    handleChange(event){\r\n        const {name,value}=event.target\r\n        this.setState({[name]: value})\r\n        // console.log(\"working\");\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n        const randNum=Math.floor(Math.random()*this.state.allMemeImgs.length)\r\n        const randMemeImg=this.state.allMemeImgs[randNum].url\r\n        this.setState({randomImg:randMemeImg})\r\n    }\r\n    render(){\r\n        return(\r\n            // <div>meme generator</div>\r\n            <div>\r\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n                    <input \r\n                        type='text' \r\n                        name='topText' \r\n                        placeholder='Top Text'\r\n                        value={this.state.topText} \r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <br/>\r\n                    <input \r\n                        type='text' \r\n                        name='bottomText' \r\n                        placeholder='Bottom Text'\r\n                        value={this.state.bottomText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <br/>\r\n                    <button type='submit' >Submit</button>\r\n                </form>\r\n                <div className='meme'>\r\n                    <img src={this.state.randomImg} alt=''/>\r\n                    <h2 className='top'>{this.state.topText}</h2>\r\n                    <h2 className='bottom'>{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        ); \r\n    }\r\n\r\n}\r\n\r\nexport default  MemeGenerator;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"34","line":2,"column":8,"nodeType":"35","messageId":"36","endLine":2,"endColumn":12},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]